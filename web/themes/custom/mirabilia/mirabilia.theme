<?php

/**
 * @file
 * Functions to support theming in the Mirabilia theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function mirabilia_preprocess_html(&$variables) {

}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function mirabilia_preprocess_page(&$variables) {

}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function mirabilia_preprocess_node(&$variables) {
  $node = &$variables['node'];
  $contentTypeMatcher = [];
  preg_match('/^(\w+_)?(.*)$/', $node->bundle(), $contentTypeMatcher);
  if (count($contentTypeMatcher) == 3) {
    $contentType = $contentTypeMatcher[2];
    switch ($contentType) {
      case 'issue':
        $has_special_sections = false;
        try {
          $has_special_sections = count($node->field_f_sections_issue->referencedEntities()) > 0;
        } finally {
          $variables['has_special_sections'] = $has_special_sections;
        }

        $showSemester = true;
        try {
          $safeSemester = (new UnicodeString(\strip_tags($node->field_semester->get(0)->value)))->trim();
          $safeTitle = (new UnicodeString(\strip_tags($node->field_rich_title->get(0)->value)))->trim();
          $showSemester = !($safeTitle->folded()->equalsTo($safeSemester->folded()));
        } catch(Exception $e) {
          \Drupal::logger('mirabilia_theme')->error('Failed to determine if an Issue should hide its semester field');
        } finally {
          $variables['showSemester'] = $showSemester;
        }
        break;
    }
    $variables['contentType'] = $contentType;
  }
}

function addCommonSuggestionsForIssueTemplates(array &$suggestions, array $variables, $hook) {
  try {
    $nodeType = $variables["elements"]["#node"]->bundle();
    $viewMode = $variables["elements"]["#view_mode"];
    if (strstr($nodeType, 'issue')) {
      $defaultSuggestions = [$suggestions[1], $suggestions[2]];
      $suggestions[1] = "node__issue";
      $suggestions[2] = "node__issue__$viewMode";
      array_splice($suggestions, 3, 0, $defaultSuggestions);
    }
  } finally {
    return $suggestions;
  }
}

function mirabilia_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook === 'node') {
    addCommonSuggestionsForIssueTemplates($suggestions, $variables, $hook);
  }
}